# -*- coding: utf-8 -*-
"""pokerquiz.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16Wu9cxzv6et70x1WFHBIFJ7jPHT6oc_Z
"""

# -*- coding: utf-8 -*-
"""
Created on Sat Nov 17 16:50:30 2018

@author: Ricardo Rosa
"""


import random
import pandas
import pandas as pd



if __name__ == "__main__":
    position_dic = {
            "BB":-2,
            "SB":-1,
            "BTN":0,
            "CO":1,
            "MP":2,
            "UTG":3,
            }
    flops_list=["FD_A_High","FD_J_High","FD_LowCards","R_A_High"]
    ok_hero=0
    ok_villain=0
    position_list=["BB","SB","BTN","CO","MP","UTG"]
    profile_OOP=["standart","cbhighf","cblowf"]
    profile_IP=["standart","cbhighf","cblowf"]
    cards=[]
    half_bet=[]
    bet=[]
    check=[]
    flop=[]
    ok_hand=0
    score=0
    
    #position_steal_list=["BTN","CO","SB"]
    #position_steal_flat_list=["BTN","SB","BB"]
    print("Choose Flop:")
    print(flops_list)
    print("R-Random")
    answer=input("Resposta:")
    
    if answer!='R' and answer!='r':
        flop_choose=flops_list[int(answer)]
    else:
        flop_choose=random.choice(flops_list)
    while ok_hero==0:
        print("Choose Hero Position:")
        print(position_list)
        print("R-Random")
        answer=input("Resposta:")
        if answer!="R" and answer!="r":
            position_hero=position_list[int(answer)]
        else:        
            position_hero=random.choice(position_list)
        if position_hero!="BB":
            ok_hero=1
    #print (position_list["BTN"])
    while ok_villain==0:
        print("Choose Villain Position:")
        print(position_list)
        print("R-Random")
        answer=input("Resposta:")
        if answer!="R" and answer!="r":
            position_villain=position_list[int(answer)]
        else:        
            position_villain=random.choice(position_list)
        if position_dic[position_hero]>position_dic[position_villain]:
            ok_villain=1
    #print ("Hero: ",position_hero," Villain: ",position_villain)
    
    
    if position_villain=="BB" and position_dic[position_hero]>=0:
        villain_is="OOP"
        hero_is="IP"
        print("Choose Profile:")
        print(profile_IP)
        print("R-Random")
        answer=input("Resposta:")
        if answer!="R" and answer!="r":
            profile=profile_IP[int(answer)]
        else:        
            profile=random.choice(profile_IP)
        strategy="x_IP"
        if profile!="standart":
            strategy="x_IP_"+profile
            
            
    else:
        villain_is="IP"
        hero_is="OOP"
        print("Choose Profile:")
        print(profile_OOP)
        print("R-Random")
        answer=input("Resposta:")
        if str(answer)!="R" and str(answer)!="r":
            profile=profile_OOP[int(answer)]
        else:        
            profile=random.choice(profile_OOP)
        strategy="OOP"
        if profile!="standart":
            strategy="OOP_"+profile        
    
    if position_dic[position_hero]<=1 and position_villain=="BB":
        flat_range=30
    else:
        flat_range=7
    
    #print("Hero is",hero_is,"Villain is",villain_is," flat range villain ",flat_range)    
    #file='report_'+hero_is+'_Full.csv'
    
    file='https://raw.githubusercontent.com/ricclemente/pokerquiz/master/'+flop_choose+'/'+str(flat_range)+'/'+hero_is+'/'+strategy+'.csv'
    df = pandas.read_csv(file, index_col='Hand', names=['Flop','Hand','Weight IP', 'IP Equity', 'IP EV', 'IP EQR', 'Half_Bet','BET 3 EV', 'CHECK', 'CHECK EV'] )   
    
    
    cards.append(df.index)
    flop.append(df.Flop)
    df = pandas.read_csv(file, index_col='Half_Bet', names=['Flop','Hand','Weight IP', 'IP Equity', 'IP EV', 'IP EQR', 'Half_Bet','BET 3 EV', 'CHECK', 'CHECK EV'] )   
    half_bet.append(df.index)
    
    #print(df.keys())
    #print(cards[0][1])
    #print(df)
    #print(half_bet)
    df.index = pd.to_numeric(df.index, errors='coerce')
    x=df.index>=60
    df["BET"]=x
#    for x in range(1,len(half_bet[0])):
#        print(half_bet[0][x])
#        if float(half_bet[0][x])>=60:
#            df["BET"]="SIM"
#        else:
#            df["BET"]="NAO"
    
    bet.append(x) 
    df = pandas.read_csv(file, index_col='CHECK', names=['Flop','Hand','Weight IP', 'IP Equity', 'IP EV', 'IP EQR', 'Half_Bet','BET 3 EV', 'CHECK', 'CHECK EV'] )   
    check.append(df.index)
    #print(check[0])
    #print(bet[0][187])
    print("Quantas maos quer treinar?")
    it=input("Resposta:")
    for i in range (int(it)):
        ok_hand=0
        while ok_hand==0:            
            hand=random.choice(cards[0])
            if hand!="Hand":
                ok_hand=1
        print("")
        print("Profile:",profile)                                                        
        print("Strategy:",strategy) 
        print("")               
        print("Hero on the",position_hero,"with",hand)
        print("Hero raises to $5 and",position_villain,"calls")
        print("")
        print("Flop ($6):",flop[0][1],"type:",flop_choose)
        if hero_is=="OOP":
            print("Hero...?")
        else:    
            print(position_villain,"checks. Hero...?")
        print("")        
        print("1. Cbet 3")
        print("2. Check")
        print("3. Check/Cbet")
        answer=input("Resposta:")
        df = pandas.read_csv(file, index_col='Hand', names=['Flop','Hand','Weight IP', 'IP Equity', 'IP EV', 'IP EQR', 'Half_Bet','BET 3 EV', 'CHECK', 'CHECK EV'] )   
        df.Half_Bet = pd.to_numeric(df.Half_Bet, errors='coerce')
        for x in range(1,len(cards[0])): 
            #print(x)
            if hand==cards[0][x]:
                #print (bet[0][x])
                #print(answer)
                print(bet[0][x],check[0][x])
                if int(answer)==1 and str(bet[0][x])=="True":
                    print("Resposta certa")
                    score=score+1
                    #print(df.loc[df["Half_Bet"]>=60,["Flop","Half_Bet"]])
                    #print(df.loc[df["Half_Bet"]<=40,["Flop","Half_Bet"]])
                if int(answer)==1 and str(bet[0][x])=="False":
                    print("Resposta errada")
                    if (float(check[0][x])>40 and float(check[0][x])<60):
                        print("A Resposta correcta é Check/Bet")
                    else:
                        print("A Resposta correcta é Check")
                    #print(df.loc[df["Half_Bet"]>=60,["Flop","Half_Bet"]])
                    #print(df.loc[df["Half_Bet"]<=40,["Flop","Half_Bet"]])
                if int(answer)==2 and str(bet[0][x])=="False" and float(check[0][x])>=60 :
                    print("Resposta certa")
                    score=score+1
                    #print(df.loc[df["Half_Bet"]<=40,["Flop","Half_Bet"]])
                    #print(df.loc[df["Half_Bet"]>=60,["Flop","Half_Bet"]])
                if int(answer)==2 and str(bet[0][x])=="False" and float(check[0][x])<60 :
                    print("Resposta errada")                
                    print("A Resposta correcta é Check/Bet")
                if int(answer)==2 and str(bet[0][x])=="True":
                    print("Resposta errada")
                    print("A Resposta correcta é CBet")                
    
                        
                if int(answer)==3 and float(check[0][x])>40 and float(check[0][x])<60 :
                    print("Resposta certa")  
                    score=score+1
                if (int(answer)==3 and float(check[0][x])<=40) or (int(answer)==3 and float(check[0][x])>=60) :
                    print("Resposta errada")
                    if str(bet[0][x])=="True":
                        print("A Resposta correcta é CBet")
                    else:
                        print("A Resposta correcta é Check")                
                    #print(df.loc[df["Half_Bet"]<=40,["Flop","Half_Bet"]])
                    #print(df.loc[df["Half_Bet"]>=60,["Flop","Half_Bet"]])
                #break                
    print("Score final:",(score/(int(it)))*100)